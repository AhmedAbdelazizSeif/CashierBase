# Generated by Django 5.0b1 on 2023-11-18 23:00

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('phone2', models.CharField(max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('ean', models.CharField(max_length=13, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('stock', models.IntegerField()),
                ('wholesale_price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('phone2', models.CharField(max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('total', models.FloatField(null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Cashier.customer')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('price', models.FloatField()),
                ('total', models.FloatField()),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cashier.invoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cashier.product')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='items',
            field=models.ManyToManyField(through='Cashier.InvoiceItem', to='Cashier.product'),
        ),
        migrations.CreateModel(
            name='WholesaleInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('total', models.FloatField()),
                ('seller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Cashier.seller')),
            ],
        ),
        migrations.CreateModel(
            name='WholesaleInvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('price_per_pack', models.FloatField()),
                ('small_packets_per_big_pack', models.IntegerField()),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cashier.wholesaleinvoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cashier.product')),
            ],
        ),
        migrations.AddField(
            model_name='wholesaleinvoice',
            name='items',
            field=models.ManyToManyField(through='Cashier.WholesaleInvoiceItem', to='Cashier.product'),
        ),
    ]
